#!/usr/bin/ruby
# (C) 2017 Shawn Landden, GPL-2+
#Create the databases (or cache) for command-not-found
#
#This program creates the database in /var/cache/command-not-found/db. It may
#take some time, because the files it reads are big.
#
#Patches are accepted, as well as rewrites.
#
#RE2 makes this twice as fast
require 're2'
require 'kyotocabinet'
include KyotoCabinet

paths = RE2::Regexp.new('^(?:(?:bin\/)|(?:sbin\/)|(?:usr\/bin\/)|(?:usr\/sbin\/)|(?:usr\/games\/))')
parse = RE2::Regexp.new('^[^ \t]*\/([^ \t]*)[ \t]*([^ \t]*)\/([^ \t]*)$')
kc = DB::new()
unless kc.open('/var/cache/command-not-found/db.kct#logkinds=debug#log=+', DB::OWRITER | DB::OCREATE)
	STDERR.printf("open error: %s\n", db.error)
end
`apt-get indextargets`.split("\n\n").grep(RE2("ShortDesc: Contents")).
map{|i| /Filename: ([^\n]*)\n/.match(i)[1]}.each { |repo|
	io = IO.popen(["/usr/lib/apt/apt-helper", "cat-file", repo])
	io.grep(paths) { |line|
		match = parse.match(line)
		if match[2].include?('/')
			component = match[2].split('/')[0]
		else
			component = "main"
		end
		kc.set("#{match[1]}", "#{match[3].chomp}/#{component.byteslice(0,2)}")
	}
}
kc.close
